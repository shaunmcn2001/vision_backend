# cloudbuild.yaml  (safe, health-gated deploy)
substitutions:
  _REGION: australia-southeast1
  _REPO: agri
  _SERVICE: vision-backend

images:
  - australia-southeast1-docker.pkg.dev/$PROJECT_ID/${_REPO}/backend:$SHORT_SHA

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 1) Build image from the correct folder
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'services/backend'
    args: [
      'build',
      '-t', 'australia-southeast1-docker.pkg.dev/$PROJECT_ID/${_REPO}/backend:$SHORT_SHA',
      '.'
    ]

  # 2) Push image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'australia-southeast1-docker.pkg.dev/$PROJECT_ID/${_REPO}/backend:$SHORT_SHA'
    ]

  # 3) Deploy new revision with NO traffic, tag = SHORT_SHA
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gcloud run deploy ${_SERVICE} \
          --image australia-southeast1-docker.pkg.dev/$PROJECT_ID/${_REPO}/backend:$SHORT_SHA \
          --region ${_REGION} \
          --platform managed \
          --allow-unauthenticated \
          --no-traffic \
          --tag ${SHORT_SHA}

  # 4) Wait for readiness + health check the tagged URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        BASE=$(gcloud run services describe ${_SERVICE} --region ${_REGION} --format='value(status.url)')
        # Tag URL format: https://TAG---SERVICE-<hash>-<region>.run.app
        HOST=$(echo "$BASE" | sed -E "s#https://(.*)#\1#")
        TAG_HOST="${SHORT_SHA}---${_SERVICE}-${HOST#${_SERVICE}-}"
        URL="https://${TAG_HOST}/healthz"

        echo "Health checking ${URL} ..."
        for i in {1..20}; do
          CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
          if [ "$CODE" = "200" ]; then
            echo "Health check passed."
            exit 0
          fi
          echo "Waiting for healthy (try $i/20), got $CODE"
          sleep 5
        done
        echo "Health check FAILED for tag ${SHORT_SHA}"; exit 1

  # 5) If healthy, shift 100% traffic to the new revision tag
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gcloud run services update-traffic ${_SERVICE} \
          --region ${_REGION} \
          --to-tags ${SHORT_SHA}=100
